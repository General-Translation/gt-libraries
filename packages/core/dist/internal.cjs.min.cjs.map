{"version":3,"file":"internal.cjs.min.cjs","sources":["../src/settings/settingsUrls.ts","../src/settings/plurals.ts","../src/cache/IntlCache.ts","../src/locales/getPluralForm.ts","../src/settings/settings.ts"],"sourcesContent":["export const defaultCacheUrl = 'https://cdn.gtx.dev' as const;\nexport const defaultBaseUrl = 'https://api.gtx.dev' as const;\nexport const defaultRuntimeApiUrl = 'https://runtime.gtx.dev' as const;\nexport const translateBatchUrl = '/v1/translate/batch' as const;\nexport const translateJsxUrl = '/v1/translate/react' as const;\nexport const translateContentUrl = '/v1/translate/content' as const;\nexport const translateIcuUrl = '/v1/translate/icu' as const;\nexport const updateProjectTranslationsUrl =\n  '/v1/project/translations/update' as const;\nexport const getProjectLocalesUrl = '/v1/project/locales' as const;\n","export const pluralForms = [\n  'singular',\n  'plural',\n  'dual',\n  'zero',\n  'one',\n  'two',\n  'few',\n  'many',\n  'other',\n] as const;\nexport type PluralType = (typeof pluralForms)[number];\nexport function isAcceptedPluralForm(form: string): form is PluralType {\n  return pluralForms.includes(form as (typeof pluralForms)[number]);\n}\n","class IntlCache {\n    private cache: Map<string, any>\n\n    constructor() {\n      // Create separate caches for each Intl constructor\n      this.cache = new Map();\n    }\n  \n    private _generateKey(constructor: string, locales: string | string[], options = {}) {\n      // Handle both string and array locales\n      const localeKey = Array.isArray(locales) ? locales.join(',') : locales;\n      // Sort option keys to ensure consistent key generation\n      const sortedOptions = options ? JSON.stringify(options, Object.keys(options).sort()) : '{}';\n      return `${constructor}:${localeKey}:${sortedOptions}`;\n    }\n  \n    get<K extends keyof typeof Intl>(\n      constructor: K, \n      locales: string | string[], \n      options = {}\n    ): (\n      /* @ts-expect-error constructors must be valid */\n      InstanceType<typeof Intl[K]> \n    ){\n      const key = this._generateKey(constructor, locales, options);\n      if (!this.cache.has(key)) {\n        // Create a new Intl object if not in cache\n        const intlObject = new (Intl[constructor] as any)(locales, options);\n        this.cache.set(key, intlObject);\n      }\n      return this.cache.get(key);\n    }\n\n}\n\nexport const intlCache = new IntlCache();","import { intlCache } from 'src/cache/IntlCache';\nimport { pluralForms, PluralType } from '../settings/plurals';\nimport { libraryDefaultLocale } from '../settings/settings';\n\n/**\n * Given a number and a list of allowed plural forms, return the plural form that best fits the number.\n *\n * @param {number} n - The number to determine the plural form for.\n * @param {locales[]} forms - The allowed plural forms.\n * @returns {PluralType} The determined plural form, or an empty string if none fit.\n */\nexport default function _getPluralForm(\n  n: number,\n  forms: PluralType[] = pluralForms as any,\n  locales: string[] = [libraryDefaultLocale]\n): PluralType | '' {\n  const pluralRules = intlCache.get('PluralRules', locales);\n  const provisionalBranchName = pluralRules.select(n);\n  // aliases\n  const absN = Math.abs(n);\n  // 0\n  if (absN === 0 && forms.includes('zero')) return 'zero'; // override\n  // 1\n  if (absN === 1) {\n    if (forms.includes('singular')) return 'singular'; // override\n    if (forms.includes('one')) return 'one'; // override\n  }\n  if (provisionalBranchName === 'one' && forms.includes('singular'))\n    return 'singular';\n  // 2\n  if (absN === 2) {\n    if (forms.includes('dual')) return 'dual'; // override\n    if (forms.includes('two')) return 'two'; // override\n  }\n  if (provisionalBranchName === 'two' && forms.includes('dual')) return 'dual';\n  // fallbacks\n  if (forms.includes(provisionalBranchName)) return provisionalBranchName;\n  // two\n  if (provisionalBranchName === 'two' && forms.includes('dual')) return 'dual';\n  if (provisionalBranchName === 'two' && forms.includes('plural'))\n    return 'plural';\n  if (provisionalBranchName === 'two' && forms.includes('other'))\n    return 'other';\n  // few\n  if (provisionalBranchName === 'few' && forms.includes('plural'))\n    return 'plural';\n  if (provisionalBranchName === 'few' && forms.includes('other'))\n    return 'other';\n  // many\n  if (provisionalBranchName === 'many' && forms.includes('plural'))\n    return 'plural';\n  if (provisionalBranchName === 'many' && forms.includes('other'))\n    return 'other';\n  // other\n  if (provisionalBranchName === 'other' && forms.includes('plural'))\n    return 'plural';\n  return '';\n}\n","export const libraryDefaultLocale = 'en' as const;\nexport const localeCookieName = 'generaltranslation.locale' as const;\nexport const localeHeaderName = 'x-generaltranslation-locale';\nexport const maxTimeout = 60000;\n"],"names":["pluralForms","intlCache","IntlCache","this","cache","Map","prototype","_generateKey","constructor","locales","options","undefined","localeKey","Array","isArray","join","sortedOptions","JSON","stringify","Object","keys","sort","concat","get","key","has","intlObject","Intl","set","n","forms","provisionalBranchName","select","absN","Math","abs","includes","form"],"mappings":"aAAO,ICAMA,EAAc,CACzB,WACA,SACA,OACA,OACA,MACA,MACA,MACA,OACA,SCTF,IAmCaC,EAAY,IAnCzB,WAGI,SAAAC,IAEEC,KAAKC,MAAQ,IAAIC,IA4BvB,OAzBYH,EAAAI,UAAAC,aAAR,SAAqBC,EAAqBC,EAA4BC,QAAAC,IAAAD,IAAAA,EAAY,CAAA,GAEhF,IAAME,EAAYC,MAAMC,QAAQL,GAAWA,EAAQM,KAAK,KAAON,EAEzDO,EAAgBN,EAAUO,KAAKC,UAAUR,EAASS,OAAOC,KAAKV,GAASW,QAAU,KACvF,MAAO,UAAGb,EAAW,KAAAc,OAAIV,EAAa,KAAAU,OAAAN,EACvC,EAEDd,EAAAI,UAAAiB,IAAA,SACEf,EACAC,EACAC,QAAAC,IAAAD,IAAAA,EAAY,CAAA,GAKZ,IAAMc,EAAMrB,KAAKI,aAAaC,EAAaC,EAASC,GACpD,IAAKP,KAAKC,MAAMqB,IAAID,GAAM,CAExB,IAAME,EAAa,IAAKC,KAAKnB,GAAqBC,EAASC,GAC3DP,KAAKC,MAAMwB,IAAIJ,EAAKE,GAEtB,OAAOvB,KAAKC,MAAMmB,IAAIC,EACvB,EAEJtB,CAAD,4BFhC8B,8CADC,mDAEK,gDGSZ,SACtB2B,EACAC,EACArB,QADAE,IAAAmB,IAAAA,EAAsB9B,QACtBW,IAAAF,IAAAA,EAAqB,CCda,ODgBlC,IACMsB,EADc9B,EAAUsB,IAAI,cAAed,GACPuB,OAAOH,GAE3CI,EAAOC,KAAKC,IAAIN,GAEtB,GAAa,IAATI,GAAcH,EAAMM,SAAS,QAAS,MAAO,OAEjD,GAAa,IAATH,EAAY,CACd,GAAIH,EAAMM,SAAS,YAAa,MAAO,WACvC,GAAIN,EAAMM,SAAS,OAAQ,MAAO,MAEpC,GAA8B,QAA1BL,GAAmCD,EAAMM,SAAS,YACpD,MAAO,WAET,GAAa,IAATH,EAAY,CACd,GAAIH,EAAMM,SAAS,QAAS,MAAO,OACnC,GAAIN,EAAMM,SAAS,OAAQ,MAAO,MAEpC,MAA8B,QAA1BL,GAAmCD,EAAMM,SAAS,QAAgB,OAElEN,EAAMM,SAASL,GAA+BA,EAEpB,QAA1BA,GAAmCD,EAAMM,SAAS,QAAgB,OACxC,QAA1BL,GAAmCD,EAAMM,SAAS,UAC7C,SACqB,QAA1BL,GAAmCD,EAAMM,SAAS,SAC7C,QAEqB,QAA1BL,GAAmCD,EAAMM,SAAS,UAC7C,SACqB,QAA1BL,GAAmCD,EAAMM,SAAS,SAC7C,QAEqB,SAA1BL,GAAoCD,EAAMM,SAAS,UAC9C,SACqB,SAA1BL,GAAoCD,EAAMM,SAAS,SAC9C,QAEqB,UAA1BL,GAAqCD,EAAMM,SAAS,UAC/C,SACF,EACT,+BF7CM,SAA+BC,GACnC,OAAOrC,EAAYoC,SAASC,EAC9B,+BGdoC,8BACJ,qDACA"}